import streamlit as st
import datetime
from convertdate import chinese

# --- Thi·∫øt l·∫≠p danh s√°ch Can Chi v√† Qu·∫ª D·ªãch ---
thien_can = ["Gi√°p", "·∫§t", "B√≠nh", "ƒêinh", "M·∫≠u", "K·ª∑", "Canh", "T√¢n", "Nh√¢m", "Qu√Ω"]
dia_chi = ["T√Ω", "S·ª≠u", "D·∫ßn", "M√£o", "Th√¨n", "T·ªµ", "Ng·ªç", "M√πi", "Th√¢n", "D·∫≠u", "Tu·∫•t", "H·ª£i"]
quenames = [
    "C√†n", "ƒêo√†i", "Ly", "Ch·∫•n", "T·ªën", "Kh·∫£m", "C·∫•n", "Kh√¥n"
]

# --- H√†m t√≠nh ch·ªâ s·ªë Can v√† Chi ---
def get_can_chi(year, month, day):
    can_nam = thien_can[(year + 6) % 10]
    chi_nam = dia_chi[(year + 8) % 12]

    # ∆Ø·ªõc l∆∞·ª£ng can chi ng√†y (ch√≠nh x√°c c·∫ßn d√πng l·ªãch ng√†y gi·ªù c·ªï)
    total_days = (datetime.date(year, month, day) - datetime.date(1900, 1, 1)).days
    can_ngay = thien_can[(total_days + 10) % 10]
    chi_ngay = dia_chi[(total_days + 12) % 12]

    return can_nam + " " + chi_nam, can_ngay + " " + chi_ngay

# --- H√†m chuy·ªÉn Can Chi th√†nh s·ªë ---
def chi_to_number(chi: str):
    if chi in dia_chi:
        return dia_chi.index(chi) + 1
    return 0

# --- H√†m l·∫≠p qu·∫ª theo c√¥ng th·ª©c ri√™ng ---
def lap_que(gio, ngay, thang, nam):
    # Qu·∫ª h·∫°
    que_ha_index = (gio + ngay + thang + nam) % 8
    que_ha = quenames[que_ha_index]

    # Qu·∫ª th∆∞·ª£ng
    que_thuong_index = (ngay + thang + nam) % 8
    que_thuong = quenames[que_thuong_index]

    # H√†o ƒë·ªông
    hao_dong = (gio + ngay + thang + nam) % 6 + 1

    ten_que = f"{que_thuong} tr√™n {que_ha}"
    return que_thuong, que_ha, hao_dong, ten_que

# --- Giao di·ªán Streamlit ---
st.title("üßø B√≥i Qu·∫ª Kinh D·ªãch - Mai Hoa D·ªãch S·ªë")
selected_date = st.date_input(
    "Ch·ªçn ng√†y mu·ªën gieo qu·∫ª:",
    value=datetime.date.today(),
    min_value=datetime.date(1900, 1, 1),
    max_value=datetime.date(2100, 12, 31)
)

gio = st.number_input("Nh·∫≠p gi·ªù (0‚Äì23):", min_value=0, max_value=23, value=12)

# Chuy·ªÉn sang √¢m l·ªãch
year, month, day = selected_date.year, selected_date.month, selected_date.day
am_nam, am_thang, am_ngay, is_leap = chinese.from_gregorian(year, month, day)

# T√≠nh Can Chi
can_chi_nam, can_chi_ngay = get_can_chi(year, month, day)

# L·∫≠p qu·∫ª
que_thuong, que_ha, hao_dong, ten_que = lap_que(gio, am_ngay, am_thang, chi_to_number(can_chi_nam.split()[1]))

# --- Hi·ªÉn th·ªã k·∫øt qu·∫£ ---
st.subheader("üìÜ Ng√†y ƒë√£ ch·ªçn:")
st.write(f"D∆∞∆°ng l·ªãch: {day}/{month}/{year}")
st.write(f"√Çm l·ªãch: {am_ngay}/{am_thang}/{am_nam} {'(th√°ng nhu·∫≠n)' if is_leap else ''}")
st.write(f"Can Chi nƒÉm: {can_chi_nam}")
st.write(f"Can Chi ng√†y: {can_chi_ngay}")

st.subheader("üìú K·∫øt qu·∫£ gieo qu·∫ª:")
st.write(f"Qu·∫ª: **{ten_que}**, H√†o ƒë·ªông: **H√†o s·ªë {hao_dong}**")

# --- Lu·∫≠n gi·∫£i c∆° b·∫£n ---
st.subheader("üìñ Lu·∫≠n gi·∫£i √Ω nghƒ©a:")
luan_giai = {
    "C√†n tr√™n C√†n": "Thu·∫ßn C√†n - ƒê·∫°i c√°t, t∆∞·ª£ng tr∆∞ng cho s·ª± s√°ng t·∫°o, v∆∞∆°n l√™n, th√†nh c√¥ng to√†n di·ªán.",
    "Kh√¥n tr√™n Kh√¥n": "Thu·∫ßn Kh√¥n - Thu·∫≠n theo t·ª± nhi√™n, v·ªØng ch·∫Øc, n·ªÅn t·∫£ng b·ªÅn l√¢u.",
    # B·∫°n c√≥ th·ªÉ th√™m nhi·ªÅu qu·∫ª ·ªü ƒë√¢y
}

st.info(luan_giai.get(ten_que, "ƒê√¢y l√† qu·∫ª √≠t g·∫∑p ho·∫∑c ch∆∞a c√≥ trong kho lu·∫≠n gi·∫£i."))

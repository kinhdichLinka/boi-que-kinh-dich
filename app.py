import streamlit as st
from datetime import datetime
import calendar
import chinese_calendar
from convertdate import chinese

st.set_page_config(page_title="Mai Hoa D·ªãch S·ªë", layout="centered")

st.title("üîÆ B√≥i Qu·∫ª Kinh D·ªãch - Mai Hoa D·ªãch S·ªë")
st.markdown("T√≠nh qu·∫ª theo ng√†y gi·ªù, ph∆∞∆°ng ph√°p Mai Hoa D·ªãch S·ªë. Chuy·ªÉn ƒë·ªïi √¢m l·ªãch, k·∫øt lu·∫≠n t√™n qu·∫ª v√† di·ªÖn gi·∫£i.")

# Danh s√°ch 8 qu·∫ª c∆° b·∫£n
bagua = ["C√†n", "ƒêo√†i", "Ly", "Ch·∫•n", "T·ªën", "Kh·∫£m", "C·∫•n", "Kh√¥n"]

# Danh s√°ch 64 qu·∫ª (ch·ªâ demo v√†i c√°i, b·∫°n c√≥ th·ªÉ m·ªü r·ªông)
que_dich = {
    (0, 0): ("C√†n vi C√†n", "Thu·∫ßn d∆∞∆°ng, t∆∞·ª£ng tr∆∞ng cho s√°ng t·∫°o, ki√™n ƒë·ªãnh, ti·∫øn l√™n. Qu·∫ª t·ªët."),
    (7, 7): ("Kh√¥n vi Kh√¥n", "Thu·∫ßn √¢m, t∆∞·ª£ng tr∆∞ng cho nhu thu·∫≠n, n√¢ng ƒë·ª°, d∆∞·ª°ng sinh. Qu·∫ª t·ªët."),
    (6, 1): ("C·∫•n ƒêo√†i", "T∆∞·ª£ng tr∆∞ng cho c·∫£n tr·ªü, ƒë·ª•ng ƒë·ªô nh∆∞ng c√≥ c∆° h·ªôi chuy·ªÉn h√≥a."),
    (1, 6): ("ƒêo√†i C·∫•n", "Ni·ªÅm vui v√† s·ª± v·ªØng ch·∫Øc k·∫øt h·ª£p. C√≥ th·ªÉ mang l·∫°i may m·∫Øn."),
    # ... Th√™m c√°c t·ªï h·ª£p qu·∫ª kh√°c n·∫øu mu·ªën
}

# Nh·∫≠p d·ªØ li·ªáu
col1, col2 = st.columns(2)
with col1:
    ngay_gio = st.date_input("üìÖ Ch·ªçn ng√†y gieo qu·∫ª", value=datetime.today())
with col2:
    gio = st.time_input("üïì Ch·ªçn gi·ªù gieo qu·∫ª", value=datetime.now().time())

# Chuy·ªÉn sang √Çm l·ªãch
def convert_to_lunar(dt: datetime):
    lunar = chinese.from_gregorian(dt.year, dt.month, dt.day)
    return {
        "year": lunar[0],
        "month": lunar[1],
        "day": lunar[2],
        "leap": lunar[3],
    }

# Quy ƒë·ªïi Can Chi sang s·ªë
can_chi_gia_tri = {
    "Gi√°p": 1, "·∫§t": 2, "B√≠nh": 3, "ƒêinh": 4, "M·∫≠u": 5,
    "K·ª∑": 6, "Canh": 7, "T√¢n": 8, "Nh√¢m": 9, "Qu√Ω": 10,
    "T√Ω": 1, "S·ª≠u": 2, "D·∫ßn": 3, "M√£o": 4, "Th√¨n": 5, "T·ªµ": 6,
    "Ng·ªç": 7, "M√πi": 8, "Th√¢n": 9, "D·∫≠u": 10, "Tu·∫•t": 11, "H·ª£i": 12,
}

# T√≠nh to√°n gi√° tr·ªã Can Chi ƒë∆°n gi·∫£n (ch·ªâ chi, demo)
def get_chi_number(year):
    chi = (year - 4) % 12 + 1  # T√Ω = 1
    return chi

# T√≠nh qu·∫ª
def tinh_que(gio, ngay, thang, nam):
    # Quy ƒë·ªïi gi·ªù sang s·ªë can chi (T√Ω=1, S·ª≠u=2, ...)
    gio_gia_tri = int((gio.hour + 1) // 2) + 1
    if gio_gia_tri > 12:
        gio_gia_tri -= 12

    # D√πng Chi (ƒë∆°n gi·∫£n) ƒë·ªÉ t√≠nh
    chi_ngay = ngay
    chi_thang = thang
    chi_nam = get_chi_number(nam)

    que_thuong = (chi_ngay + chi_thang + chi_nam) % 8
    que_ha = (gio_gia_tri + chi_ngay + chi_thang + chi_nam) % 8
    que_dong = (gio_gia_tri + chi_ngay + chi_thang + chi_nam) % 6 + 1

    return que_thuong, que_ha, que_dong

# B·∫•m n√∫t xem qu·∫ª
if st.button("üå† Xem qu·∫ª"):
    dt = datetime.combine(ngay_gio, gio)
    am_lich = convert_to_lunar(dt)
    st.markdown(f"**√Çm l·ªãch:** {am_lich['day']:02d}/{am_lich['month']:02d}/{am_lich['year']} {'(Nhu·∫≠n)' if am_lich['leap'] else ''}")

    q_thuong, q_ha, q_dong = tinh_que(gio, am_lich['day'], am_lich['month'], am_lich['year'])

    ten_que_thuong = bagua[q_thuong]
    ten_que_ha = bagua[q_ha]
    ten_que = que_dich.get((q_thuong, q_ha), (f"{ten_que_thuong} {ten_que_ha}", "Ch∆∞a c√≥ di·ªÖn gi·∫£i."))

    st.subheader(f"üîÆ Qu·∫ª Ch·ªß: {ten_que[0]}")
    st.markdown(f"**√ù nghƒ©a:** {ten_que[1]}")
    st.markdown(f"**H√†o ƒë·ªông:** V·ªã tr√≠ **h√†o {q_dong}** (ƒë·∫øm t·ª´ d∆∞·ªõi l√™n)")

    st.info("ƒê√¢y l√† k·∫øt qu·∫£ t√≠nh to√°n theo ph∆∞∆°ng ph√°p Mai Hoa D·ªãch S·ªë, c√≥ th·ªÉ m·ªü r·ªông di·ªÖn gi·∫£i, chi ti·∫øt qu·∫ª bi·∫øn trong b·∫£n n√¢ng c·∫•p.")

